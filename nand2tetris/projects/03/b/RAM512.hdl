// This file is part of the materials accompanying the book
// "The Elements of Computing Systems" by Nisan and Schocken,
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    RAM64(in=in,load=storea,address=address[3..8],out=a);
    RAM64(in=in,load=storeb,address=address[3..8],out=b);
    RAM64(in=in,load=storec,address=address[3..8],out=c);
    RAM64(in=in,load=stored,address=address[3..8],out=d);
    RAM64(in=in,load=storee,address=address[3..8],out=e);
    RAM64(in=in,load=storef,address=address[3..8],out=f);
    RAM64(in=in,load=storeg,address=address[3..8],out=g);
    RAM64(in=in,load=storeh,address=address[3..8],out=h);

    //work out which Ram64 segment to send the load signal to
    DMux8Way(in=load,sel=address[0..2],a=storea,b=storeb,c=storec,d=stored,e=storee,f=storef,g=storeg,h=storeh);

    //read the value stored in the output
    Mux8Way16(a=a,b=b,c=c,d=d,e=e,f=f,g=g,h=h,sel=address[0..2],out=out);
}
